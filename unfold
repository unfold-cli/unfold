#!/usr/bin/env node
const program = require('commander');
const pkg = require('./package.json');

program.version(pkg.version);

/*
|--------------------------------------------------------------------------
| Config
|--------------------------------------------------------------------------
*/
const configCommand = require('./src/commands/config');
program.command('config').action(configCommand);

/*
|--------------------------------------------------------------------------
| Create
|--------------------------------------------------------------------------
*/
const newCommand = require('./src/commands/newCommand');
program.command('new <template> [path]').action(newCommand);

/*
|--------------------------------------------------------------------------
| Templates
|--------------------------------------------------------------------------
*/
const installCommand = require('./src/commands/templateInstallCommand');
program.command('template:install <template>').action(installCommand);

const listCommand = require('./src/commands/templateListCommand');
program.command('template:list').action(listCommand);

const templateUpdateCommand = require('./src/commands/templateUpdateCommand');
program.command('template:update').action(templateUpdateCommand);

/*
|--------------------------------------------------------------------------
| Variables
|--------------------------------------------------------------------------
*/
const variableSaveCommand = require('./src/commands/variableSaveCommand');
program.command('variable:set <variable> <value>').action(variableSaveCommand);

const variableUnsetCommand = require('./src/commands/variableUnsetCommand');
program.command('variable:unset <variable>').action(variableUnsetCommand);

const variableListCommand = require('./src/commands/variableListCommand');
program.command('variable:list').action(variableListCommand);

if (!process.argv.slice(2).length) {
    program.outputHelp();
}

program.parse(process.argv);
